#!/bin/bash

# Demo script for the new multi-endpoint GraphQL MCP Server
# This script demonstrates the dynamic endpoint registration workflow

echo "üöÄ GraphQL MCP Server - Multi-Endpoint Demo"
echo "============================================"
echo ""

echo "üìù New Workflow Overview:"
echo "1. Start server (no configuration needed)"
echo "2. Register GraphQL endpoints dynamically"
echo "3. Execute queries against any registered endpoint"
echo "4. Use auto-generated tools for specific operations"
echo ""

echo "üîß Server Configuration Changes:"
echo "‚Ä¢ Environment variables are now optional"
echo "‚Ä¢ Multiple endpoints can be registered simultaneously"
echo "‚Ä¢ Each endpoint has its own authentication and settings"
echo "‚Ä¢ Auto-generated tools are created per endpoint"
echo ""

echo "üõ†Ô∏è Available Tools for Endpoint Management:"
echo "‚Ä¢ RegisterEndpoint - Add new GraphQL endpoints"
echo "‚Ä¢ QueryGraphQL - Execute queries against registered endpoints" 
echo "‚Ä¢ ListDynamicTools - View all endpoints and generated tools"
echo "‚Ä¢ ExecuteDynamicOperation - Use auto-generated operation tools"
echo "‚Ä¢ RefreshEndpointTools - Update tools when schemas change"
echo "‚Ä¢ UnregisterEndpoint - Remove endpoints and cleanup tools"
echo ""

echo "üìñ Example Usage:"
echo ""
echo "1. Register a GitHub API endpoint:"
echo '{
  "endpoint": "https://api.github.com/graphql",
  "endpointName": "github", 
  "headers": "{\"Authorization\": \"Bearer YOUR_TOKEN\"}",
  "allowMutations": false,
  "toolPrefix": "gh"
}'
echo ""

echo "2. Register a local development API:"
echo '{
  "endpoint": "http://localhost:4000/graphql",
  "endpointName": "local_api",
  "allowMutations": true,
  "toolPrefix": "dev"
}'
echo ""

echo "3. Execute a custom query:"
echo '{
  "query": "query { viewer { login name } }",
  "endpointName": "github"
}'
echo ""

echo "4. Use auto-generated tools:"
echo "After registration, tools like 'gh_query_viewer' and 'dev_mutation_createUser' are automatically available!"
echo ""

echo "üìö For detailed documentation, see:"
echo "‚Ä¢ MULTI_ENDPOINT_GUIDE.md - Complete multi-endpoint usage guide"
echo "‚Ä¢ DYNAMIC_TOOLS_README.md - Dynamic tool generation details"
echo "‚Ä¢ README.md - Updated with new workflow information"
echo ""

echo "üéØ Benefits of the new approach:"
echo "‚Ä¢ No pre-configuration required"
echo "‚Ä¢ Support for multiple GraphQL APIs simultaneously"
echo "‚Ä¢ Flexible authentication per endpoint"
echo "‚Ä¢ Automatic tool generation for all operations"
echo "‚Ä¢ Runtime endpoint management"
echo ""

echo "‚úÖ Ready to start! Run: dotnet run"
